[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000


[app:main]
use = config:../ckan/test-core.ini

## Database Settings
sqlalchemy.url = postgresql://ckan_default:pass@localhost/ckan_qld_test

ckan.plugins =
    datarequests
    resource_visibility
    data_qld data_qld_resources data_qld_integration data_qld_google_analytics data_qld_reporting
    scheming_datasets
    validation validation_resource validation_package


## ckanext-data_qld
ckanext.data_qld.resource_formats = CSV HTML JSON RDF TXT XLS
ckanext.data_qld.reporting.de_identified_no_schema.count_from = 2022-01-011

## ckanext-scheming
scheming.dataset_schemas = ckanext.data_qld:ckan_dataset.json
scheming.presets =
    ckanext.scheming:presets.json
    ckanext.data_qld:presets.json
    ckanext.resource_visibility:schema/presets.json
scheming.dataset_fallback = false

# ckanext-validation
ckanext.validation.run_on_update_async = True
ckanext.validation.run_on_create_async = True

# Logging configuration
[loggers]
keys = root, ckan, sqlalchemy, environment

[handlers]
keys = console, dblog

[formatters]
keys = generic, dblog

[logger_root]
level = WARN
handlers = console

[logger_ckan]
qualname = ckan
handlers =
level = INFO

[logger_environment]
qualname = ckan.config.environment
handlers =
level = WARN

[logger_ckan_harvester]
qualname = ckanext.harvest
handlers = dblog
level = DEBUG

[logger_sqlalchemy]
handlers =
qualname = sqlalchemy.engine
level = WARN

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[handler_dblog]
class = ckanext.harvest.log.DBLogHandler
args = ()
level = DEBUG
formatter = dblog

[formatter_dblog]
format = %(message)s

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
